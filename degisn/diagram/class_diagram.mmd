classDiagram
    class User {
        +Long userId
        +String name
        +String email
        +LocalDateTime createdAt
    }

    class Admin {
        +createProduct(productDetails)
        +removeProduct(productId)
        +addDiscount(details)
    }

    class Customer {
        +addProductToBasket(product, quantity)
        +removeProductFromBasket(product)
        +checkout() Order
    }

    class Product {
        +Long productId
        +String name
        +BigDecimal price
        +Integer stock
        +String category
    }

    class Discount {
        +Long discountId
        +String description
        +DiscountType discountType
        +String rules
        +LocalDateTime expirationDate
        +LocalDateTime createAt
    }

    class Basket {
        +Long basketId
        +LocalDateTime createdAt
        +LocalDateTime updatedAt
        +BigDecimal totalPrice
    }

    class BasketItem {
        +Long basketItemId
        +Integer quantity
    }

    class Order {
        +Long orderId
        +OrderStatus status
        +BigDecimal totalPrice
        +LocalDateTime createdAt
    }

    class OrderItem {
        +Long orderItemId
        +Integer quantity
        +BigDecimal priceAtPurchase
        +BigDecimal discountedPrice
    }

    class PricingService {
        +calculateDiscounts(basket)
    }

    class DiscountStrategy {
        <<interface>>
        +apply(basket, rules) double
    }

    class PercentageDiscountStrategy {
        +apply(basket, rules) double
    }

    class BogoDealStrategy {
        +apply(basket, rules) double
    }

    class FixedAmountOffStrategy {
        +apply(basket, rules) double
    }
    
    class SpendThresholdStrategy {
        +apply(basket, rules) double
    }
    
    class BundlePriceStrategy {
        +apply(basket, rules) double
    }

    %% --- Relationships ---
    User <|-- Admin
    User <|-- Customer
    
    Customer "1" -- "1" Basket : has
    Customer ..> Order : creates

    Admin ..> Product : creates/removes
    Admin ..> Discount : creates

    Basket "1" *-- "*" BasketItem : contains
    BasketItem "1" -- "1" Product : refers to

    Order "1" *-- "*" OrderItem : contains
    OrderItem "1" -- "1" Product : refers to

    Product "1" -- "0..*" Discount : can have

    PricingService ..> DiscountStrategy : uses
    PricingService ..> Discount : reads
    DiscountStrategy <|.. PercentageDiscountStrategy : implements
    DiscountStrategy <|.. BogoDealStrategy : implements
    DiscountStrategy <|.. FixedAmountOffStrategy : implements
    DiscountStrategy <|.. SpendThresholdStrategy : implements
    DiscountStrategy <|.. BundlePriceStrategy : implements